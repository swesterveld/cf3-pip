### packages.cf
#
# Packages to install are defined in an array, with desired version numbers:
# "pkgadd[<package>]" string => "<version>";
#
# For example:
#   
# "pkgadd[yolk]"    string  => "0.4.3"; 
# "pkgadd[IPy]"     string  => "0.75";
    
bundle agent pip_example
{   
    classes:
        "has_pip_from_git"  expression  => fileexists("/usr/local/bin/pip");
        "has_virtualenv"    expression  => fileexists("/usr/local/bin/virtualenv");
        "has_pip"           expression  => returnszero("/usr/bin/which pip", "useshell");
    
    vars:

        #
        # Set the command to run pip
        #
        has_pip.!has_pip_from_git::
            "PIP_CMD"   string  => execresult("/usr/bin/which pip", "useshell");
 
        has_pip_from_git::
            "PIP_CMD"   string  => "/usr/local/bin/pip";
    
    
        any::
            #
            # Locations of the virtualenv-command and our virtual environments
            #
            "VIRTUALENV_CMD"    string  => "/usr/local/bin/virtualenv";
            "VIRTUALENVS"       string  => "/data/virtualenvs/";

    
            #
            # Define the packages to install/delete
            #
            "pkgadd[yolk]"  string  => "0.4.3";

            "pip_install"   slist   => getindices("pkgadd");

            "pip_delete"    slist   => {
                "dummypkg2",
                "dummypkg3",
            };
    
    
    packages:

        has_virtualenv::
    
            "$(pip_install)"
    
                comment => "Install Python package(s) in a virtual environment",
    
                package_method => sara_pip_virtualenv($(VIRTUALENV_CMD), "$(VIRTUALENVS)/testenv"),
                package_policy => "addupdate",
                package_select => "==",
                package_version => "$(pkgadd[$(pip_install)])";

            "$(pip_delete)"
    
                comment => "Delete Python package(s) from a virtual environment",
        
                package_method => sara_pip_virtualenv($(VIRTUALENV_CMD), "$(VIRTUALENVS)/testenv"),
                package_policy => "delete";
}
